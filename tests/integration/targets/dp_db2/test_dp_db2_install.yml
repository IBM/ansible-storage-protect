---
- name: Precheck the DP for DB2
  hosts: storage_protect_clients
  become: true
  roles:
    - role: ibm.storage_protect.dp_db2_precheck
      vars:
        db2_instance_owner: "db2inst1"

- name: Install BA Client
  hosts: storage_protect_clients
  become: true
  roles:
    - role: ibm.storage_protect.ba_client_install
      vars:
        ba_client_start_daemon: true
        ba_client_state: "present"
        ba_client_version: "8.1.23.0"
        ba_client_tar_repo: "{{ lookup('env', 'BA_CLIENT_TAR_REPO_PATH') }}"

- name: Configure dsm.opt parameters while maintaining the existing the parameters
  hosts: storage_protect_clients
  become: true
  roles:
    - role: ibm.storage_protect.dsm_opt
      vars:
        dsm_opt_parameters:
          dsm_opt_servername: "NewServer"
          dsm_opt_nodename: "NewClient"
          dsm_opt_domain: "C: D: E:\\UserData"
          dsm_opt_password: "mypassword"
          dsm_opt_password_access: "generate"


- name: Add dsm.sys file to clients
  hosts: storage_protect_clients
  tasks:
    - name: Check TIVsm RPMs are installed
      ansible.builtin.command:
        cmd: rpm -qa | grep -i tivsm
      changed_when: false

    - name: Check required files exist
      ansible.builtin.stat:
        path: "/opt/tivoli/tsm/client/ba/bin/{{ item }}"
      loop:
        - dsmc
        - dsm.opt
      register: required_files
      failed_when: not required_files.stat.exists

    - name: Create dsm.sys
      ibm.storage_protect.dsm_sysfile:
        server_name: "{{ storage_protect_server_name }}"
        tcp_server_address: "{{ storage_protect_server_ip }}"

- name: Test register server in IBM Storage Protect
  hosts: storage_protect_server
  vars:
    storage_protect_server_name: IBMSPSVR01
    storage_protect_username: adminuser
    storage_protect_password: adminPassword12345678
    storage_protect_nodes:
      - name: Test1
        policy_domain: STANDARD
        schedules:
          - my_sched  # This needs to previously exist. Once a schedule module is created, replace with that
        node_password: P@ssword123456789
        session_security: strict
        node_password_expiry: 90
        can_archive_delete: true
        min_extent_size: 250
        replication_state: enabled
        backup_repl_rule_default: NONE
  pre_tasks:
    - name: Create dsm.sys
      ibm.storage_protect.dsm_sysfile:
        server_name: "{{ storage_protect_server_name }}"
        tcp_server_address: "{{ ansible_host }}"
  roles:
    - ibm.storage_protect.nodes

- name: Final validation for the DP for DB2
  hosts: storage_protect_clients
  become: true
  roles:
    - role: ibm.storage_protect.dp_db2_postcheck
      vars:
        db2_instance_owner: "db2inst1"
        node_current_password: "oldpassword" 
        node_new_password: "newpassword" 