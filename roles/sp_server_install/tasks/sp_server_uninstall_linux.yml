- name: Uninstall SP Server
  block:
    - name: Cleanup server
      ansible.builtin.include_tasks: sp_server_clean_config.yml
      when: sp_server_state == "absent"

    # Generate the response file for uninstallation
    - name: Generate Response file for uninstalling Sp Server
      ansible.builtin.template:
        src: sp_server_uninstall_response.xml.j2
        dest: "/opt/IBM/InstallationManager/eclipse/tools/uninstallResponse.xml"
      when: sp_server_state == "absent"

    # Execute uninstallation
    - name: Execute uninstallation
      ansible.builtin.command: "./imcl -s -input uninstallResponse.xml -acceptLicense"
      args:
        chdir: "/opt/IBM/InstallationManager/eclipse/tools"
      changed_when: true
      when: sp_server_state == "absent"

    - name: Remove IBM Storage Protect Server files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/opt/tivoli/tsm/ui"
        - "/tsm/server/*/*"
      when: sp_server_state == "absent"

#    - name: Uninstallation Status
#      ansible.builtin.debug:
#        msg:
#          - "Successfully uninstalled SP Server"

    - name: Uninstallation Status
      ansible.builtin.debug:
        msg: "Successfully uninstalled: {{ uninstalled_components | join(', ') }}"
      vars:
        uninstalled_components: >-
          {{
            [
              (offerings.server and sp_server_state == "absent") | ternary("SP Server", ""),
              (offerings.oc and sp_server_state == "absent") | ternary("Operations Center", ""),
              (offerings.ossm and sp_server_state == "absent") | ternary("OSSM", ""),
              (offerings.stagent and sp_server_state == "absent") | ternary("Storage Agent", ""),
              (offerings.devices and sp_server_state == "absent") | ternary("Devices", "")
            ] | select('defined') | select() | list
          }}
  rescue:
    - name: Uninstallation Failed
      ansible.builtin.debug:
        msg:
          - "Uninstallation failed at task {{ ansible_failed_task.name }}"
          - "Error message: {{ ansible_failed_result }}"
...
