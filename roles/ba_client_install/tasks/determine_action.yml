---
- name: Query the installed version of TIVsm-BA
  ansible.builtin.command: rpm -q TIVsm-BA
  register: installed_version_check
  ignore_errors: true
  changed_when: false

- name: Extract installed version
  ansible.builtin.set_fact:
    installed_version: >-
      {{
        installed_version_check.stdout.split('-')[2] ~ '.' ~
        installed_version_check.stdout.split('-')[3].split('.')[0]
      }}
  when: installed_version_check.rc == 0

- name: Debug the installed version
  ansible.builtin.debug:
    var: installed_version

- name: Normalize the user version and installed version
  ansible.builtin.set_fact:
    normalized_user_version: "{{ (ba_client_version.split('.') + ['0'])[0:4] | join('.') }}"
    normalized_installed_version: "{{ (installed_version.split('.') + ['0'])[0:4] | join('.') }}"
  when: installed_version is defined

- name: Debug normalized versions
  ansible.builtin.debug:
    msg: >
      User version (normalized): {{ normalized_user_version }},
      Installed version (normalized): {{ normalized_installed_version }}
  when: installed_version is defined

- name: Parsing normalized versions into lists for comparison
  ansible.builtin.set_fact:
    user_version_list: "{{ normalized_user_version.split('.') | map('int') | list }}"
    installed_version_list: "{{ normalized_installed_version.split('.') | map('int') | list }}"
  when: installed_version is defined

- name: Determining action based on conditions
  ansible.builtin.set_fact:
    ba_client_action: >-
      {{
        "upgrade" if
        (installed_version is defined and user_version_list > installed_version_list and version_available)
        else
        "install" if
        (installed_version is not defined and version_available)
        else
        "none"
      }}

- name: Fail if no ba_client_action can be determined
  ansible.builtin.fail:
    msg: >-
      Unable to determine ba_client_action. Either:
      - Specified version {{ ba_client_version }} is not available locally, or
      - Installed version {{ installed_version | default('None') }} is greater or equal to the specified version.
      The specified version should be greater than the already installed version {{ installed_version | default('None') }}.
  when: ba_client_action == 'none'

# - name: Debug ba_client_action
#  debug:
#    msg: "Determined action: {{ ba_client_action }}"
