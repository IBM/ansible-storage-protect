---
#- name: Find all .tar files in the directory
#  ansible.builtin.find:
#    paths: "{{ lookup('env', 'BA_CLIENT_TAR_REPO_PATH') }}"
#    patterns: "*.tar"
#    file_type: file
#  register: tar_files
#  delegate_to: localhost

- name: Find version-specific .tar files in the directory
  ansible.builtin.find:
    paths: "{{ lookup('env', 'BA_CLIENT_TAR_REPO_PATH') }}"
    patterns: "{{ ba_client_version }}*.tar"
    file_type: file
  register: tar_files
  delegate_to: localhost

- name: Debug the found files
  debug:
    var: tar_files.files
  delegate_to: localhost

- name: Fail if no .tar files are found in the directory
  fail:
    msg: "No .tar files found matching the version {{ ba_client_version }} in the specified directory: {{ lookup('env', 'BA_CLIENT_TAR_REPO_PATH') }}."
  when: tar_files.files | length == 0
  delegate_to: localhost

- name: Check if the specified version is available locally
  set_fact:
    version_available: "{{ tar_files.files | length > 0 }}"

- name: Debug version availability
  debug:
    var: version_available

#- name: Fail the play if version specified is not available in control node
#  fail:
#    msg: "Version {{ ba_client_version }} is not available in the specified directory {{ lookup('env', 'BA_CLIENT_TAR_REPO_PATH') }}."
#  when: version_available == false

- name: Get the path of the specified version
  set_fact:
    tar_file_path: >-
      {{
        tar_files.files
        | map(attribute='path')
        | list
        | first
      }}
  when: tar_files.files | length > 0

- name: Debug the found tar file path
  debug:
    msg: "Path of the specified version {{ ba_client_version }}: {{ tar_file_path }}"
  when: tar_files.files | length > 0
