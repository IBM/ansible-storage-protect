name: Run Ansible Playbook to Register Client

on:
  push:
    branches:
      - dev-gitops

jobs:
  run_ansible_playbook:
    runs-on: Self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python and Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          
      - name: Set environment variable to disable SSH host key checking
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False

      - name: Install IBM Storage Protect Collection
        run: ansible-galaxy collection install ibm.storage_protect

      - name: Add SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbook
        env:
          CLIENT_NAME: ${{ secrets.CLIENT_NAME }}
          CLIENT_PASSWORD: ${{ secrets.CLIENT_PASSWORD }}
          CLIENT_POLICY_DOMAIN: ${{ secrets.CLIENT_POLICY_DOMAIN }}
          SP_SERVER_IP: ${{ secrets.SP_SERVER_IP }}
          SP_SERVER_NAME: ${{ secrets.SP_SERVER_NAME }}
          SP_SERVER_PASSWORD: ${{ secrets.SP_SERVER_PASSWORD }}
          SP_SERVER_USERNAME: ${{ secrets.SP_SERVER_USERNAME }}
        run: |
          ansible-playbook tests/integration/targets/client_node/test_sp_client.yml \
              -i "10.240.64.8,10.240.64.6," \
              -e "storage_protect_server_name=${{ secrets.SP_SERVER_NAME }}" \
              -e "storage_protect_server_ip=${{ secrets.SP_SERVER_IP }}" \
              -e "storage_protect_username=${{ secrets.SP_SERVER_USERNAME }}" \
              -e "storage_protect_password=${{ secrets.SP_SERVER_PASSWORD }}" \
              -e "client_name=${{ secrets.CLIENT_NAME }}" \
              -e "client_password=${{ secrets.CLIENT_PASSWORD }}" \
              -e "client_policy_domain=${{ secrets.CLIENT_POLICY_DOMAIN }}"
